{"version":3,"file":"static/js/989.9c1efb29.chunk.js","mappings":"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","sources":["components/ChangePassword.tsx","components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../lib/supabase';\n\ninterface ChangePasswordProps {\n  onClose: () => void;\n}\n\nconst ChangePassword: React.FC<ChangePasswordProps> = ({ onClose }) => {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState<'success' | 'error' | ''>('');\n\n  const validatePassword = (password: string) => {\n    const minLength = 8;\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumbers = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n    if (password.length < minLength) {\n      return 'Password must be at least 8 characters long';\n    }\n    if (!hasUpperCase) {\n      return 'Password must contain at least one uppercase letter';\n    }\n    if (!hasLowerCase) {\n      return 'Password must contain at least one lowercase letter';\n    }\n    if (!hasNumbers) {\n      return 'Password must contain at least one number';\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character';\n    }\n    return null;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage('');\n    setMessageType('');\n\n    // Validation\n    if (!currentPassword || !newPassword || !confirmPassword) {\n      setMessage('All fields are required');\n      setMessageType('error');\n      setIsLoading(false);\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setMessage('New passwords do not match');\n      setMessageType('error');\n      setIsLoading(false);\n      return;\n    }\n\n    const passwordError = validatePassword(newPassword);\n    if (passwordError) {\n      setMessage(passwordError);\n      setMessageType('error');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Update password\n      const { error } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n\n      if (error) {\n        setMessage(error.message);\n        setMessageType('error');\n      } else {\n        setMessage('Password updated successfully!');\n        setMessageType('success');\n        \n        // Close modal after 2 seconds\n        setTimeout(() => {\n          onClose();\n        }, 2000);\n      }\n    } catch (error: any) {\n      setMessage('An error occurred while updating your password');\n      setMessageType('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-xl shadow-xl max-w-md w-full mx-4 p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Change Password</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {message && (\n          <div className={`p-4 rounded-lg mb-4 ${\n            messageType === 'success' \n              ? 'bg-green-50 text-green-800 border border-green-200' \n              : 'bg-red-50 text-red-800 border border-red-200'\n          }`}>\n            <div className=\"flex items-center space-x-2\">\n              {messageType === 'success' ? (\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n              ) : (\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n              <span className=\"text-sm\">{message}</span>\n            </div>\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Current Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"currentPassword\"\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors\"\n              placeholder=\"Enter your current password\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              New Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors\"\n              placeholder=\"Enter your new password\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Confirm New Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors\"\n              placeholder=\"Confirm your new password\"\n            />\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <p className=\"text-xs text-gray-600 mb-2 font-medium\">Password Requirements:</p>\n            <ul className=\"text-xs text-gray-500 space-y-1\">\n              <li>• At least 8 characters long</li>\n              <li>• Contains uppercase and lowercase letters</li>\n              <li>• Contains at least one number</li>\n              <li>• Contains at least one special character</li>\n            </ul>\n          </div>\n\n          <div className=\"flex space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-1 px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg font-medium transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg font-medium transition-colors\"\n            >\n              {isLoading ? 'Updating...' : 'Update Password'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport ChangePassword from './ChangePassword';\n\nconst Dashboard: React.FC = () => {\n  const { user, signOut, loading } = useAuth();\n  const navigate = useNavigate();\n  const [mounted, setMounted] = useState(false);\n  const [showChangePassword, setShowChangePassword] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!loading && !user) {\n      console.log('🔄 User not authenticated, redirecting to login...');\n      navigate('/login', { replace: true });\n    }\n  }, [user, loading, navigate]);\n\n  const handleSignOut = async () => {\n    try {\n      console.log('🚪 Sign out button clicked - starting sign out process...');\n\n      // Clear Remember Me data on explicit logout\n      localStorage.removeItem('adfd-remember-me');\n      localStorage.removeItem('adfd-saved-email');\n\n      console.log('🧹 Cleared local storage data');\n\n      // Sign out from Supabase\n      await signOut();\n\n      console.log('✅ User signed out successfully from Supabase');\n\n      // Force navigation to login page\n      navigate('/login', { replace: true });\n\n      console.log('🔄 Navigation to login page initiated');\n\n    } catch (error) {\n      console.error('❌ Error signing out:', error);\n      // Even if there's an error, still try to navigate to login\n      navigate('/login', { replace: true });\n    }\n  };\n\n  const getRoleDisplayName = (role: string) => {\n    const roleMap: { [key: string]: string } = {\n      'admin': 'System Administrator',\n      'archive_team': 'Archive Team Member',\n      'loan_administrator': 'Loan Administrator',\n      'head_of_operations': 'Head of Operations',\n      'operations_team': 'Operations Team Lead',\n      'core_banking': 'Core Banking Team Member'\n    };\n    return roleMap[role] || role;\n  };\n\n  const getRolePermissions = (user: any) => {\n    const permissions = [];\n    if (user?.can_create_requests) permissions.push('Create Requests');\n    if (user?.can_approve_reject) permissions.push('Approve/Reject');\n    if (user?.can_disburse) permissions.push('Disburse Funds');\n    if (user?.view_only_access) permissions.push('View Only');\n    return permissions;\n  };\n\n  const getRoleColor = (role: string) => {\n    const colorMap: { [key: string]: string } = {\n      'admin': 'bg-purple-100 text-purple-800 border-purple-200',\n      'archive_team': 'bg-blue-100 text-blue-800 border-blue-200',\n      'loan_administrator': 'bg-green-100 text-green-800 border-green-200',\n      'head_of_operations': 'bg-orange-100 text-orange-800 border-orange-200',\n      'operations_team': 'bg-indigo-100 text-indigo-800 border-indigo-200',\n      'core_banking': 'bg-red-100 text-red-800 border-red-200'\n    };\n    return colorMap[role] || 'bg-gray-100 text-gray-800 border-gray-200';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return null; // Will redirect to login\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex-shrink-0\">\n                <h1 className=\"text-xl font-bold text-gray-900\">ADFD Tracking System</h1>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-700\">Welcome, {user.name}</span>\n              <button\n                onClick={() => setShowChangePassword(true)}\n                className=\"bg-blue-100 hover:bg-blue-200 text-blue-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\n              >\n                Change Password\n              </button>\n              <button\n                onClick={handleSignOut}\n                className=\"bg-red-100 hover:bg-red-200 text-red-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors border border-red-200 hover:border-red-300 cursor-pointer relative z-10\"\n                title=\"Sign out and return to login page\"\n                type=\"button\"\n              >\n                Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className={`space-y-8 ${mounted ? 'animate-fade-in' : ''}`}>\n          {/* Welcome Section */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                  Welcome to ADFD Tracking System\n                </h2>\n                <p className=\"text-gray-600 mb-4\">\n                  Secure financial request tracking and management platform\n                </p>\n              </div>\n              <div className={`px-3 py-1 rounded-full text-sm font-medium border ${getRoleColor(user.role)}`}>\n                {getRoleDisplayName(user.role)}\n              </div>\n            </div>\n          </div>\n\n          {/* User Profile Card */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Your Profile</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Full Name</label>\n                <p className=\"text-gray-900\">{user.name}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                <p className=\"text-gray-900\">{user.email}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Role</label>\n                <p className=\"text-gray-900\">{getRoleDisplayName(user.role)}</p>\n              </div>\n              {user.region && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Region</label>\n                  <p className=\"text-gray-900 capitalize\">{user.region.replace('_', ' ')}</p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Permissions Card */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Your Permissions</h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {getRolePermissions(user).map((permission, index) => (\n                <div key={index} className=\"flex items-center space-x-2 p-3 bg-green-50 rounded-lg border border-green-200\">\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                  <span className=\"text-sm font-medium text-green-800\">{permission}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* System Status */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Status</h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3 p-4 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                <div>\n                  <p className=\"text-sm font-medium text-green-800\">Authentication</p>\n                  <p className=\"text-xs text-green-600\">Active</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-4 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                <div>\n                  <p className=\"text-sm font-medium text-green-800\">Database</p>\n                  <p className=\"text-xs text-green-600\">Connected</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n                <div>\n                  <p className=\"text-sm font-medium text-blue-800\">System</p>\n                  <p className=\"text-xs text-blue-600\">Ready</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Next Steps */}\n          <div className=\"bg-blue-50 rounded-xl border border-blue-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-blue-900 mb-4\">Next Steps</h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">1</div>\n                <div>\n                  <p className=\"font-medium text-blue-900\">Change Your Password</p>\n                  <p className=\"text-sm text-blue-700\">Update your temporary password to something secure</p>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">2</div>\n                <div>\n                  <p className=\"font-medium text-blue-900\">Explore Your Role</p>\n                  <p className=\"text-sm text-blue-700\">Familiarize yourself with your permissions and responsibilities</p>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">3</div>\n                <div>\n                  <p className=\"font-medium text-blue-900\">Contact Support</p>\n                  <p className=\"text-sm text-blue-700\">Reach out to the system administrator for any questions</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      {/* Change Password Modal */}\n      {showChangePassword && (\n        <ChangePassword onClose={() => setShowChangePassword(false)} />\n      )}\n\n      <style>{`\n        @keyframes fade-in {\n          from {\n            opacity: 0;\n            transform: translateY(20px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n        \n        .animate-fade-in {\n          animation: fade-in 0.6s ease-out;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["_ref","onClose","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","message","setMessage","messageType","setMessageType","_jsx","className","children","_jsxs","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","onSubmit","async","e","preventDefault","passwordError","password","hasUpperCase","test","hasLowerCase","hasNumbers","hasSpecialChar","length","validatePassword","error","supabase","auth","updateUser","setTimeout","htmlFor","type","id","value","onChange","target","placeholder","disabled","Dashboard","user","signOut","loading","useAuth","navigate","useNavigate","mounted","setMounted","showChangePassword","setShowChangePassword","useEffect","console","log","replace","getRoleDisplayName","role","name","localStorage","removeItem","title","email","region","permissions","can_create_requests","push","can_approve_reject","can_disburse","view_only_access","getRolePermissions","map","permission","index","ChangePassword"],"sourceRoot":""}