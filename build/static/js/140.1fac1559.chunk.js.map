{"version":3,"file":"static/js/140.1fac1559.chunk.js","mappings":"4LAUA,MAmFMA,EAAsBA,CAACC,EAAWC,KACtC,OAAQA,GACN,IAAK,kBACH,OAAOD,EAAKE,oBACd,IAAK,iBACH,OAAOF,EAAKG,mBACd,IAAK,WACH,OAAOH,EAAKI,aACd,IAAK,YACH,OAAOJ,EAAKK,iBACd,IAAK,QACH,MAAqB,UAAdL,EAAKM,KACd,QACE,OAAO,IAIb,EApGsDC,IAI/C,IAJgD,SACrDC,EAAQ,aACRC,EAAY,mBACZC,GACDH,EACC,MAAM,KAAEP,EAAI,QAAEW,IAAYC,EAAAA,EAAAA,KAG1B,GAAID,EACF,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DN,UACvEO,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaN,SAAA,EAC1BK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oGACfD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeN,SAAC,6BAOrC,IAAKR,EAEH,OADAgB,QAAQC,IAAI,iFACLJ,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAACC,GAAG,SAASC,SAAO,IAItC,GAAIX,GAAgBT,EAAKM,OAASG,EAChC,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DN,UACvEO,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mCAAkCN,SAAA,EAC/CK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kFAAiFN,UAC9FK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuBO,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWf,UACzFK,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iJAGzEd,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CN,SAAC,mBACzDO,EAAAA,EAAAA,MAAA,KAAGD,UAAU,qBAAoBN,SAAA,CAAC,iEAC+BC,MAEjEI,EAAAA,EAAAA,KAAA,UACEe,QAASA,IAAMC,OAAOC,QAAQC,OAC9BjB,UAAU,8FAA6FN,SACxG,iBAST,GAAIE,EAAoB,CAEtB,IADsBX,EAAoBC,EAAMU,GAE9C,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DN,UACvEO,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mCAAkCN,SAAA,EAC/CK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kFAAiFN,UAC9FK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuBO,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWf,UACzFK,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8GAGzEd,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CN,SAAC,8BACzDO,EAAAA,EAAAA,MAAA,KAAGD,UAAU,qBAAoBN,SAAA,CAAC,2CACSE,MAE3CG,EAAAA,EAAAA,KAAA,UACEe,QAASA,IAAMC,OAAOC,QAAQC,OAC9BjB,UAAU,8FAA6FN,SACxG,gBAOX,CAGA,OAAOK,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAxB,SAAGA,I","sources":["components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: string;\n  requiredPermission?: string;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  children, \n  requiredRole, \n  requiredPermission \n}) => {\n  const { user, loading } = useAuth();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Verifying access...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!user) {\n    console.log('ðŸ”’ ProtectedRoute: User not authenticated, redirecting to login...');\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Check role-based access if required\n  if (requiredRole && user.role !== requiredRole) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center max-w-md mx-auto p-6\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <svg className=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 18.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Access Denied</h2>\n          <p className=\"text-gray-600 mb-4\">\n            You don't have permission to access this page. Required role: {requiredRole}\n          </p>\n          <button\n            onClick={() => window.history.back()}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n          >\n            Go Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Check permission-based access if required\n  if (requiredPermission) {\n    const hasPermission = checkUserPermission(user, requiredPermission);\n    if (!hasPermission) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n          <div className=\"text-center max-w-md mx-auto p-6\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg className=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Insufficient Permissions</h2>\n            <p className=\"text-gray-600 mb-4\">\n              You don't have the required permission: {requiredPermission}\n            </p>\n            <button\n              onClick={() => window.history.back()}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n            >\n              Go Back\n            </button>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  // User is authenticated and has required permissions\n  return <>{children}</>;\n};\n\n// Helper function to check user permissions\nconst checkUserPermission = (user: any, permission: string): boolean => {\n  switch (permission) {\n    case 'create_requests':\n      return user.can_create_requests;\n    case 'approve_reject':\n      return user.can_approve_reject;\n    case 'disburse':\n      return user.can_disburse;\n    case 'view_only':\n      return user.view_only_access;\n    case 'admin':\n      return user.role === 'admin';\n    default:\n      return false;\n  }\n};\n\nexport default ProtectedRoute;\n"],"names":["checkUserPermission","user","permission","can_create_requests","can_approve_reject","can_disburse","view_only_access","role","_ref","children","requiredRole","requiredPermission","loading","useAuth","_jsx","className","_jsxs","console","log","Navigate","to","replace","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","window","history","back","_Fragment"],"sourceRoot":""}