{"ast":null,"code":"// User roles in the ADFD system\n\n// Action types for withdrawal requests\n\n// Request stages\n\n// Priority levels\n\n// Currency types\n\n// User interface\n\n// Withdrawal request interface\n\n// Enhanced form data for creating new requests\n\n// Filter options\n\n// Search and filter state\n\n// Action result interface\n\n// Permission validation interface\n\n// Dashboard statistics\n\n// Notification interface\n\n// Loading state interface\n\n// Modal state interface\n\n// Form validation result\n\n// API response interface (for future backend integration)\n\n// Event handler types\n\n// Component props interfaces\n\n// Role-based permissions mapping\nexport const ROLE_PERMISSIONS = {\n  archive_team: ['view'],\n  operations_team: ['approve', 'reject', 'view'],\n  core_banking_team: ['disburse', 'view'],\n  loan_admin: ['view'],\n  admin: ['approve', 'reject', 'disburse', 'view'],\n  // Admin has all permissions\n  observer: ['view'] // Observer has view-only access\n};\n\n// Stage transition rules\nexport const STAGE_TRANSITIONS = {\n  initial_review: ['technical_review'],\n  technical_review: ['core_banking', 'initial_review'],\n  // Can go back or forward\n  core_banking: ['disbursed'],\n  disbursed: [] // Final stage\n};\n\n// Countries supported by ADFD\nexport const ADFD_COUNTRIES = ['UAE', 'Egypt', 'Jordan', 'Morocco', 'Tunisia', 'Lebanon', 'Palestine', 'Yemen', 'Sudan', 'Algeria', 'Iraq', 'Syria', 'Libya', 'Mauritania'];\n\n// Comment interface for request discussions\n\n// Timeline event interface for request history\n\n// Document attachment interface\n\n// User mention interface for tagging functionality\n\n// Enhanced request details interface\n\n// Comment form data\n\n// Request details modal state\n\n// Default form values for enhanced form\nexport const DEFAULT_FORM_VALUES = {\n  // Header Information\n  withdrawalRequestNo: '',\n  requestDate: '',\n  // Project Information\n  projectNumber: '',\n  projectDescription: '',\n  additionalProjectDetails: '',\n  // Agreement Details\n  agreementReference: '',\n  agreementDate: '',\n  agreementParty: '',\n  // Financial Information\n  paymentAmount: 0,\n  currency: 'USD',\n  valueDate: '',\n  // Beneficiary Information\n  beneficiaryName: '',\n  beneficiaryAddress: '',\n  beneficiaryBankName: '',\n  beneficiaryBankAddress: '',\n  beneficiaryBankAccount: '',\n  beneficiaryBankIBAN: '',\n  beneficiaryBankSwiftCode: '',\n  // Correspondence Bank Information\n  correspondenceBankName: '',\n  correspondenceBankSwiftCode: '',\n  correspondenceBankAddress: '',\n  // Authorization\n  authorizedRepresentative1: '',\n  authorizedRepresentative2: '',\n  // Additional Information\n  additionalNotes: '',\n  // System fields\n  country: 'UAE',\n  priority: 'medium',\n  notes: ''\n};","map":{"version":3,"names":["ROLE_PERMISSIONS","archive_team","operations_team","core_banking_team","loan_admin","admin","observer","STAGE_TRANSITIONS","initial_review","technical_review","core_banking","disbursed","ADFD_COUNTRIES","DEFAULT_FORM_VALUES","withdrawalRequestNo","requestDate","projectNumber","projectDescription","additionalProjectDetails","agreementReference","agreementDate","agreementParty","paymentAmount","currency","valueDate","beneficiaryName","beneficiaryAddress","beneficiaryBankName","beneficiaryBankAddress","beneficiaryBankAccount","beneficiaryBankIBAN","beneficiaryBankSwiftCode","correspondenceBankName","correspondenceBankSwiftCode","correspondenceBankAddress","authorizedRepresentative1","authorizedRepresentative2","additionalNotes","country","priority","notes"],"sources":["C:/Users/Ousmane/Documents/TrackingSystem/ADFD_Tracking_System/src/types/withdrawalTypes.ts"],"sourcesContent":["// User roles in the ADFD system\r\nexport type UserRole = 'archive_team' | 'operations_team' | 'core_banking_team' | 'loan_admin' | 'admin' | 'observer';\r\n\r\n// Action types for withdrawal requests\r\nexport type ActionType = 'approve' | 'reject' | 'disburse' | 'view';\r\n\r\n// Request stages\r\nexport type RequestStage = 'initial_review' | 'technical_review' | 'core_banking' | 'disbursed' | 'approved' | 'rejected';\r\n\r\n// Priority levels\r\nexport type Priority = 'low' | 'medium' | 'high' | 'urgent';\r\n\r\n// Currency types\r\nexport type Currency = 'USD' | 'EUR' | 'AED';\r\n\r\n// User interface\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: UserRole;\r\n  avatar?: string;\r\n  department?: string;\r\n  permissions?: ActionType[];\r\n  region?: string;\r\n  regional_countries?: string[];\r\n  can_create_requests?: boolean;\r\n  can_approve_reject?: boolean;\r\n  can_disburse?: boolean;\r\n  view_only_access?: boolean;\r\n  is_active?: boolean;\r\n  avatar_url?: string;\r\n}\r\n\r\n// Withdrawal request interface\r\nexport interface WithdrawalRequest {\r\n  id: string;\r\n  projectNumber: string;\r\n  refNumber: string;\r\n  beneficiaryName: string;\r\n  country: string;\r\n  amount: number;\r\n  currency: Currency;\r\n  valueDate: string;\r\n  currentStage: RequestStage;\r\n  status: string;\r\n  priority: Priority;\r\n  assignedTo: string;\r\n  processingDays: number;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  notes?: string;\r\n  attachments?: string[];\r\n}\r\n\r\n// Enhanced form data for creating new requests\r\nexport interface CreateRequestFormData {\r\n  // Header Information\r\n  withdrawalRequestNo: string;\r\n  requestDate: string;\r\n\r\n  // Project Information\r\n  projectNumber: string;\r\n  projectDescription: string;\r\n  additionalProjectDetails?: string;\r\n\r\n  // Agreement Details\r\n  agreementReference: string;\r\n  agreementDate: string;\r\n  agreementParty: string;\r\n\r\n  // Financial Information\r\n  paymentAmount: number;\r\n  currency: Currency;\r\n  valueDate: string;\r\n\r\n  // Beneficiary Information\r\n  beneficiaryName: string;\r\n  beneficiaryAddress: string;\r\n  beneficiaryBankName: string;\r\n  beneficiaryBankAddress: string;\r\n  beneficiaryBankAccount: string;\r\n  beneficiaryBankIBAN: string;\r\n  beneficiaryBankSwiftCode: string;\r\n\r\n  // Correspondence Bank Information\r\n  correspondenceBankName?: string;\r\n  correspondenceBankSwiftCode?: string;\r\n  correspondenceBankAddress?: string;\r\n\r\n  // Authorization\r\n  authorizedRepresentative1: string;\r\n  authorizedRepresentative2?: string;\r\n\r\n  // Additional Information\r\n  additionalNotes?: string;\r\n\r\n  // System fields\r\n  country: string;\r\n  priority: Priority;\r\n  notes?: string;\r\n}\r\n\r\n\r\n\r\n// Filter options\r\nexport interface FilterOptions {\r\n  status: string;\r\n  country: string;\r\n  priority: string;\r\n  stage: string;\r\n}\r\n\r\n// Search and filter state\r\nexport interface SearchFilterState {\r\n  searchTerm: string;\r\n  filters: FilterOptions;\r\n}\r\n\r\n// Action result interface\r\nexport interface ActionResult {\r\n  success: boolean;\r\n  message: string;\r\n  data?: any;\r\n}\r\n\r\n// Permission validation interface\r\nexport interface PermissionCheck {\r\n  canPerform: boolean;\r\n  reason?: string;\r\n}\r\n\r\n// Dashboard statistics\r\nexport interface DashboardStats {\r\n  totalRequests: number;\r\n  pendingRequests: number;\r\n  avgProcessingTime: number;\r\n  dueSoon: number;\r\n  byStage: {\r\n    initial_review: number;\r\n    technical_review: number;\r\n    core_banking: number;\r\n    disbursed: number;\r\n  };\r\n  byPriority: {\r\n    low: number;\r\n    medium: number;\r\n    high: number;\r\n    urgent: number;\r\n  };\r\n}\r\n\r\n// Notification interface\r\nexport interface Notification {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message: string;\r\n  timestamp: Date;\r\n  autoClose?: boolean;\r\n  duration?: number;\r\n}\r\n\r\n// Loading state interface\r\nexport interface LoadingState {\r\n  isLoading: boolean;\r\n  operation?: string;\r\n  progress?: number;\r\n}\r\n\r\n// Modal state interface\r\nexport interface ModalState {\r\n  isOpen: boolean;\r\n  type?: 'login' | 'details' | 'create' | 'confirm';\r\n  data?: any;\r\n}\r\n\r\n// Form validation result\r\nexport interface ValidationResult {\r\n  isValid: boolean;\r\n  errors: Record<string, string>;\r\n}\r\n\r\n// API response interface (for future backend integration)\r\nexport interface ApiResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  errors?: string[];\r\n  timestamp: Date;\r\n}\r\n\r\n// Event handler types\r\nexport type ButtonClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => void | Promise<void>;\r\nexport type FormSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => void | Promise<void>;\r\nexport type InputChangeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\r\n\r\n// Component props interfaces\r\nexport interface ButtonProps {\r\n  variant?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  onClick?: ButtonClickHandler;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport interface ConfirmDialogProps {\r\n  isOpen: boolean;\r\n  title: string;\r\n  message: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm: () => void | Promise<void>;\r\n  onCancel: () => void;\r\n  variant?: 'danger' | 'warning' | 'info';\r\n}\r\n\r\n// Role-based permissions mapping\r\nexport const ROLE_PERMISSIONS: Record<UserRole, ActionType[]> = {\r\n  archive_team: ['view'],\r\n  operations_team: ['approve', 'reject', 'view'],\r\n  core_banking_team: ['disburse', 'view'],\r\n  loan_admin: ['view'],\r\n  admin: ['approve', 'reject', 'disburse', 'view'], // Admin has all permissions\r\n  observer: ['view'] // Observer has view-only access\r\n};\r\n\r\n// Stage transition rules\r\nexport const STAGE_TRANSITIONS: Record<RequestStage, RequestStage[]> = {\r\n  initial_review: ['technical_review'],\r\n  technical_review: ['core_banking', 'initial_review'], // Can go back or forward\r\n  core_banking: ['disbursed'],\r\n  disbursed: [] // Final stage\r\n};\r\n\r\n// Countries supported by ADFD\r\nexport const ADFD_COUNTRIES = [\r\n  'UAE', 'Egypt', 'Jordan', 'Morocco', 'Tunisia', 'Lebanon', 'Palestine', \r\n  'Yemen', 'Sudan', 'Algeria', 'Iraq', 'Syria', 'Libya', 'Mauritania'\r\n];\r\n\r\n// Comment interface for request discussions\r\nexport interface RequestComment {\r\n  id: string;\r\n  requestId: string;\r\n  userId: string;\r\n  userName: string;\r\n  userAvatar?: string;\r\n  commentText: string;\r\n  mentionedUsers?: string[]; // Array of user IDs mentioned in the comment\r\n  isInternal: boolean;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\n// Timeline event interface for request history\r\nexport interface TimelineEvent {\r\n  id: string;\r\n  requestId: string;\r\n  userId: string;\r\n  userName: string;\r\n  userAvatar?: string;\r\n  eventType: 'status_change' | 'comment_added' | 'document_uploaded' | 'assignment_changed' | 'created' | 'approved' | 'rejected' | 'disbursed';\r\n  title: string;\r\n  description: string;\r\n  previousValue?: string;\r\n  newValue?: string;\r\n  metadata?: Record<string, any>;\r\n  createdAt: Date;\r\n}\r\n\r\n// Document attachment interface\r\nexport interface RequestDocument {\r\n  id: string;\r\n  requestId: string;\r\n  uploadedBy: string;\r\n  uploaderName: string;\r\n  fileName: string;\r\n  fileSize: number;\r\n  fileType: string;\r\n  documentType: 'agreement' | 'invoice' | 'receipt' | 'bank_statement' | 'other';\r\n  storagePath: string;\r\n  isVerified: boolean;\r\n  verifiedBy?: string;\r\n  verifiedAt?: Date;\r\n  createdAt: Date;\r\n}\r\n\r\n// User mention interface for tagging functionality\r\nexport interface UserMention {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: UserRole;\r\n  avatar?: string;\r\n  isActive: boolean;\r\n}\r\n\r\n// Enhanced request details interface\r\nexport interface RequestDetails extends WithdrawalRequest {\r\n  comments: RequestComment[];\r\n  timeline: TimelineEvent[];\r\n  documents: RequestDocument[];\r\n  totalComments: number;\r\n  lastActivity: Date;\r\n}\r\n\r\n// Comment form data\r\nexport interface CommentFormData {\r\n  commentText: string;\r\n  mentionedUsers: string[];\r\n  isInternal: boolean;\r\n}\r\n\r\n// Request details modal state\r\nexport interface RequestDetailsModalState {\r\n  isOpen: boolean;\r\n  requestId: string | null;\r\n  activeTab: 'overview' | 'timeline' | 'documents' | 'comments';\r\n  isLoading: boolean;\r\n}\r\n\r\n// Default form values for enhanced form\r\nexport const DEFAULT_FORM_VALUES: CreateRequestFormData = {\r\n  // Header Information\r\n  withdrawalRequestNo: '',\r\n  requestDate: '',\r\n\r\n  // Project Information\r\n  projectNumber: '',\r\n  projectDescription: '',\r\n  additionalProjectDetails: '',\r\n\r\n  // Agreement Details\r\n  agreementReference: '',\r\n  agreementDate: '',\r\n  agreementParty: '',\r\n\r\n  // Financial Information\r\n  paymentAmount: 0,\r\n  currency: 'USD',\r\n  valueDate: '',\r\n\r\n  // Beneficiary Information\r\n  beneficiaryName: '',\r\n  beneficiaryAddress: '',\r\n  beneficiaryBankName: '',\r\n  beneficiaryBankAddress: '',\r\n  beneficiaryBankAccount: '',\r\n  beneficiaryBankIBAN: '',\r\n  beneficiaryBankSwiftCode: '',\r\n\r\n  // Correspondence Bank Information\r\n  correspondenceBankName: '',\r\n  correspondenceBankSwiftCode: '',\r\n  correspondenceBankAddress: '',\r\n\r\n  // Authorization\r\n  authorizedRepresentative1: '',\r\n  authorizedRepresentative2: '',\r\n\r\n  // Additional Information\r\n  additionalNotes: '',\r\n\r\n  // System fields\r\n  country: 'UAE',\r\n  priority: 'medium',\r\n  notes: ''\r\n};\r\n"],"mappings":"AAAA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAmBA;;AAqBA;;AAkDA;;AAQA;;AAMA;;AAOA;;AAMA;;AAoBA;;AAWA;;AAOA;;AAOA;;AAMA;;AASA;;AAKA;;AAuBA;AACA,OAAO,MAAMA,gBAAgD,GAAG;EAC9DC,YAAY,EAAE,CAAC,MAAM,CAAC;EACtBC,eAAe,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC;EAC9CC,iBAAiB,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC;EACvCC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,KAAK,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;EAAE;EAClDC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC;AACrB,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAuD,GAAG;EACrEC,cAAc,EAAE,CAAC,kBAAkB,CAAC;EACpCC,gBAAgB,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;EAAE;EACtDC,YAAY,EAAE,CAAC,WAAW,CAAC;EAC3BC,SAAS,EAAE,EAAE,CAAC;AAChB,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,CAC5B,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EACtE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,CACpE;;AAED;;AAcA;;AAgBA;;AAiBA;;AAUA;;AASA;;AAOA;;AAQA;AACA,OAAO,MAAMC,mBAA0C,GAAG;EACxD;EACAC,mBAAmB,EAAE,EAAE;EACvBC,WAAW,EAAE,EAAE;EAEf;EACAC,aAAa,EAAE,EAAE;EACjBC,kBAAkB,EAAE,EAAE;EACtBC,wBAAwB,EAAE,EAAE;EAE5B;EACAC,kBAAkB,EAAE,EAAE;EACtBC,aAAa,EAAE,EAAE;EACjBC,cAAc,EAAE,EAAE;EAElB;EACAC,aAAa,EAAE,CAAC;EAChBC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE,EAAE;EAEb;EACAC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAE,EAAE;EACtBC,mBAAmB,EAAE,EAAE;EACvBC,sBAAsB,EAAE,EAAE;EAC1BC,sBAAsB,EAAE,EAAE;EAC1BC,mBAAmB,EAAE,EAAE;EACvBC,wBAAwB,EAAE,EAAE;EAE5B;EACAC,sBAAsB,EAAE,EAAE;EAC1BC,2BAA2B,EAAE,EAAE;EAC/BC,yBAAyB,EAAE,EAAE;EAE7B;EACAC,yBAAyB,EAAE,EAAE;EAC7BC,yBAAyB,EAAE,EAAE;EAE7B;EACAC,eAAe,EAAE,EAAE;EAEnB;EACAC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,QAAQ;EAClBC,KAAK,EAAE;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}