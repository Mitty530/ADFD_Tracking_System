{"ast":null,"code":"import{useEffect,useCallback}from'react';export const usePerformance=()=>{const measurePerformance=useCallback(()=>{if(typeof window==='undefined'||!window.performance){return null;}const navigation=performance.getEntriesByType('navigation')[0];const paint=performance.getEntriesByType('paint');const metrics={loadTime:navigation.loadEventEnd-navigation.loadEventStart,domContentLoaded:navigation.domContentLoadedEventEnd-navigation.domContentLoadedEventStart};// Add paint metrics if available\npaint.forEach(entry=>{if(entry.name==='first-contentful-paint'){metrics.firstContentfulPaint=entry.startTime;}});// Get LCP if available\nif('PerformanceObserver'in window){try{const observer=new PerformanceObserver(list=>{const entries=list.getEntries();const lastEntry=entries[entries.length-1];metrics.largestContentfulPaint=lastEntry.startTime;});observer.observe({entryTypes:['largest-contentful-paint']});}catch(e){console.warn('LCP measurement not supported');}}return metrics;},[]);const logPerformanceMetrics=useCallback(()=>{const metrics=measurePerformance();if(metrics){console.group('ðŸš€ Performance Metrics');console.log('Load Time:',`${metrics.loadTime.toFixed(2)}ms`);console.log('DOM Content Loaded:',`${metrics.domContentLoaded.toFixed(2)}ms`);if(metrics.firstContentfulPaint){console.log('First Contentful Paint:',`${metrics.firstContentfulPaint.toFixed(2)}ms`);}if(metrics.largestContentfulPaint){console.log('Largest Contentful Paint:',`${metrics.largestContentfulPaint.toFixed(2)}ms`);}console.groupEnd();}},[measurePerformance]);useEffect(()=>{// Log performance metrics after page load\nconst timer=setTimeout(()=>{logPerformanceMetrics();},1000);return()=>clearTimeout(timer);},[logPerformanceMetrics]);return{measurePerformance,logPerformanceMetrics};};// Utility function to preload critical resources\nexport const preloadResource=(href,as,type)=>{if(typeof document==='undefined')return;const link=document.createElement('link');link.rel='preload';link.href=href;link.as=as;if(type)link.type=type;document.head.appendChild(link);};// Utility function to prefetch resources\nexport const prefetchResource=href=>{if(typeof document==='undefined')return;const link=document.createElement('link');link.rel='prefetch';link.href=href;document.head.appendChild(link);};","map":{"version":3,"names":["useEffect","useCallback","usePerformance","measurePerformance","window","performance","navigation","getEntriesByType","paint","metrics","loadTime","loadEventEnd","loadEventStart","domContentLoaded","domContentLoadedEventEnd","domContentLoadedEventStart","forEach","entry","name","firstContentfulPaint","startTime","observer","PerformanceObserver","list","entries","getEntries","lastEntry","length","largestContentfulPaint","observe","entryTypes","e","console","warn","logPerformanceMetrics","group","log","toFixed","groupEnd","timer","setTimeout","clearTimeout","preloadResource","href","as","type","document","link","createElement","rel","head","appendChild","prefetchResource"],"sources":["/Users/mamadouourydiallo/ADFI/src/hooks/usePerformance.ts"],"sourcesContent":["import { useEffect, useCallback } from 'react';\n\ninterface PerformanceMetrics {\n  loadTime: number;\n  domContentLoaded: number;\n  firstContentfulPaint?: number;\n  largestContentfulPaint?: number;\n}\n\nexport const usePerformance = () => {\n  const measurePerformance = useCallback((): PerformanceMetrics | null => {\n    if (typeof window === 'undefined' || !window.performance) {\n      return null;\n    }\n\n    const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n    const paint = performance.getEntriesByType('paint');\n\n    const metrics: PerformanceMetrics = {\n      loadTime: navigation.loadEventEnd - navigation.loadEventStart,\n      domContentLoaded: navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart,\n    };\n\n    // Add paint metrics if available\n    paint.forEach((entry) => {\n      if (entry.name === 'first-contentful-paint') {\n        metrics.firstContentfulPaint = entry.startTime;\n      }\n    });\n\n    // Get LCP if available\n    if ('PerformanceObserver' in window) {\n      try {\n        const observer = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          const lastEntry = entries[entries.length - 1];\n          metrics.largestContentfulPaint = lastEntry.startTime;\n        });\n        observer.observe({ entryTypes: ['largest-contentful-paint'] });\n      } catch (e) {\n        console.warn('LCP measurement not supported');\n      }\n    }\n\n    return metrics;\n  }, []);\n\n  const logPerformanceMetrics = useCallback(() => {\n    const metrics = measurePerformance();\n    if (metrics) {\n      console.group('ðŸš€ Performance Metrics');\n      console.log('Load Time:', `${metrics.loadTime.toFixed(2)}ms`);\n      console.log('DOM Content Loaded:', `${metrics.domContentLoaded.toFixed(2)}ms`);\n      if (metrics.firstContentfulPaint) {\n        console.log('First Contentful Paint:', `${metrics.firstContentfulPaint.toFixed(2)}ms`);\n      }\n      if (metrics.largestContentfulPaint) {\n        console.log('Largest Contentful Paint:', `${metrics.largestContentfulPaint.toFixed(2)}ms`);\n      }\n      console.groupEnd();\n    }\n  }, [measurePerformance]);\n\n  useEffect(() => {\n    // Log performance metrics after page load\n    const timer = setTimeout(() => {\n      logPerformanceMetrics();\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [logPerformanceMetrics]);\n\n  return {\n    measurePerformance,\n    logPerformanceMetrics\n  };\n};\n\n// Utility function to preload critical resources\nexport const preloadResource = (href: string, as: string, type?: string) => {\n  if (typeof document === 'undefined') return;\n\n  const link = document.createElement('link');\n  link.rel = 'preload';\n  link.href = href;\n  link.as = as;\n  if (type) link.type = type;\n  \n  document.head.appendChild(link);\n};\n\n// Utility function to prefetch resources\nexport const prefetchResource = (href: string) => {\n  if (typeof document === 'undefined') return;\n\n  const link = document.createElement('link');\n  link.rel = 'prefetch';\n  link.href = href;\n  \n  document.head.appendChild(link);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}