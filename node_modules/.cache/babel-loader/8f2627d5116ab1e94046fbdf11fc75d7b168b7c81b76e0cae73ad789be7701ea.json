{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Routes,Route,useNavigate,useLocation}from'react-router-dom';import{AuthProvider}from'./contexts/AuthContext';// Import components\nimport NewLandingPage from'./components/NewLandingPage';import Login from'./components/Login';import Dashboard from'./components/Dashboard';import ProtectedRoute from'./components/ProtectedRoute';// Component to handle password reset redirects\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PasswordResetRedirect(){const navigate=useNavigate();const location=useLocation();useEffect(()=>{// Check if we're on the home page with password reset tokens in the hash\nif(location.pathname==='/'&&location.hash.includes('type=recovery')){console.log('ðŸ”„ Redirecting password reset from home page to enter-new-password');// Redirect to enter-new-password page with the hash intact\nnavigate('/enter-new-password'+location.hash);}},[location,navigate]);return/*#__PURE__*/_jsx(NewLandingPage,{});}function App(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PasswordResetRedirect,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{})})})]})})})});}export default App;","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useLocation","AuthProvider","NewLandingPage","Login","Dashboard","ProtectedRoute","jsx","_jsx","jsxs","_jsxs","PasswordResetRedirect","navigate","location","pathname","hash","includes","console","log","App","children","className","path","element"],"sources":["/Users/mamadouourydiallo/ADFI/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext';\n\n// Import components\nimport NewLandingPage from './components/NewLandingPage';\nimport Login from './components/Login';\n\nimport Dashboard from './components/Dashboard';\nimport ProtectedRoute from './components/ProtectedRoute';\n\n// Component to handle password reset redirects\nfunction PasswordResetRedirect() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    // Check if we're on the home page with password reset tokens in the hash\n    if (location.pathname === '/' && location.hash.includes('type=recovery')) {\n      console.log('ðŸ”„ Redirecting password reset from home page to enter-new-password');\n      // Redirect to enter-new-password page with the hash intact\n      navigate('/enter-new-password' + location.hash);\n    }\n  }, [location, navigate]);\n\n  return <NewLandingPage />;\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div className=\"App\">\n          <Routes>\n            <Route path=\"/\" element={<PasswordResetRedirect />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/dashboard\" element={\n              <ProtectedRoute>\n                <Dashboard />\n              </ProtectedRoute>\n            } />\n          </Routes>\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACnG,OAASC,YAAY,KAAQ,wBAAwB,CAErD;AACA,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAEtC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CAExD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAC/B,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9BN,SAAS,CAAC,IAAM,CACd;AACA,GAAIkB,QAAQ,CAACC,QAAQ,GAAK,GAAG,EAAID,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC,eAAe,CAAC,CAAE,CACxEC,OAAO,CAACC,GAAG,CAAC,oEAAoE,CAAC,CACjF;AACAN,QAAQ,CAAC,qBAAqB,CAAGC,QAAQ,CAACE,IAAI,CAAC,CACjD,CACF,CAAC,CAAE,CAACF,QAAQ,CAAED,QAAQ,CAAC,CAAC,CAExB,mBAAOJ,IAAA,CAACL,cAAc,GAAE,CAAC,CAC3B,CAEA,QAAS,CAAAgB,GAAGA,CAAA,CAAG,CACb,mBACEX,IAAA,CAACN,YAAY,EAAAkB,QAAA,cACXZ,IAAA,CAACX,MAAM,EAAAuB,QAAA,cACLZ,IAAA,QAAKa,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBV,KAAA,CAACZ,MAAM,EAAAsB,QAAA,eACLZ,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEf,IAAA,CAACG,qBAAqB,GAAE,CAAE,CAAE,CAAC,cACtDH,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEf,IAAA,CAACJ,KAAK,GAAE,CAAE,CAAE,CAAC,cAC3CI,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,YAAY,CAACC,OAAO,cAC9Bf,IAAA,CAACF,cAAc,EAAAc,QAAA,cACbZ,IAAA,CAACH,SAAS,GAAE,CAAC,CACC,CACjB,CAAE,CAAC,EACE,CAAC,CACN,CAAC,CACA,CAAC,CACG,CAAC,CAEnB,CAEA,cAAe,CAAAc,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}