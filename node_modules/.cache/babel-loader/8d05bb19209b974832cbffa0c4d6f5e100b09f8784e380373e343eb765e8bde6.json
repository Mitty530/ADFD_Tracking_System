{"ast":null,"code":"var _jsxFileName = \"/Users/mamadouourydiallo/ADFI/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n      if (session !== null && session !== void 0 && session.user) {\n        fetchUserProfile(session.user);\n      } else {\n        setLoading(false);\n      }\n    });\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      setSession(session);\n      if (session !== null && session !== void 0 && session.user) {\n        await fetchUserProfile(session.user);\n      } else {\n        setUser(null);\n        setLoading(false);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const fetchUserProfile = async authUser => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('user_profiles').select('*').eq('id', authUser.id).single();\n      if (error) {\n        var _authUser$user_metada, _authUser$email, _authUser$user_metada2, _authUser$user_metada3, _authUser$user_metada4;\n        console.error('Error fetching user profile:', error);\n        // Create a basic profile if none exists\n        const basicProfile = {\n          id: authUser.id,\n          name: ((_authUser$user_metada = authUser.user_metadata) === null || _authUser$user_metada === void 0 ? void 0 : _authUser$user_metada.name) || ((_authUser$email = authUser.email) === null || _authUser$email === void 0 ? void 0 : _authUser$email.split('@')[0]) || 'User',\n          email: authUser.email || '',\n          role: ((_authUser$user_metada2 = authUser.user_metadata) === null || _authUser$user_metada2 === void 0 ? void 0 : _authUser$user_metada2.role) || 'user',\n          department: ((_authUser$user_metada3 = authUser.user_metadata) === null || _authUser$user_metada3 === void 0 ? void 0 : _authUser$user_metada3.department) || 'General',\n          permissions: ((_authUser$user_metada4 = authUser.user_metadata) === null || _authUser$user_metada4 === void 0 ? void 0 : _authUser$user_metada4.permissions) || ['view_department']\n        };\n        setUser(basicProfile);\n      } else {\n        setUser(data);\n      }\n    } catch (error) {\n      console.error('Error in fetchUserProfile:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signIn = async (email, password) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    return {\n      error\n    };\n  };\n  const signUp = async (email, password, metadata) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata\n      }\n    });\n    return {\n      error\n    };\n  };\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setUser(null);\n    setSession(null);\n  };\n  const resetPassword = async email => {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email);\n    return {\n      error\n    };\n  };\n  const value = {\n    user,\n    session,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"sIDOCMze9iVqwxkgWIhOu8vskSI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","session","setSession","loading","setLoading","auth","getSession","then","data","fetchUserProfile","subscription","onAuthStateChange","event","unsubscribe","authUser","error","from","select","eq","id","single","_authUser$user_metada","_authUser$email","_authUser$user_metada2","_authUser$user_metada3","_authUser$user_metada4","console","basicProfile","name","user_metadata","email","split","role","department","permissions","signIn","password","signInWithPassword","signUp","metadata","options","signOut","resetPassword","resetPasswordForEmail","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mamadouourydiallo/ADFI/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { User, Session, AuthError } from '@supabase/supabase-js';\n\ninterface UserProfile {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  department: string;\n  region?: string;\n  permissions: string[];\n}\n\ninterface AuthContextType {\n  user: UserProfile | null;\n  session: Session | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<{ error: AuthError | null }>;\n  signUp: (email: string, password: string, metadata: any) => Promise<{ error: AuthError | null }>;\n  signOut: () => Promise<void>;\n  resetPassword: (email: string) => Promise<{ error: AuthError | null }>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      if (session?.user) {\n        fetchUserProfile(session.user);\n      } else {\n        setLoading(false);\n      }\n    });\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\n      setSession(session);\n      if (session?.user) {\n        await fetchUserProfile(session.user);\n      } else {\n        setUser(null);\n        setLoading(false);\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const fetchUserProfile = async (authUser: User) => {\n    try {\n      const { data, error } = await supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('id', authUser.id)\n        .single();\n\n      if (error) {\n        console.error('Error fetching user profile:', error);\n        // Create a basic profile if none exists\n        const basicProfile: UserProfile = {\n          id: authUser.id,\n          name: authUser.user_metadata?.name || authUser.email?.split('@')[0] || 'User',\n          email: authUser.email || '',\n          role: authUser.user_metadata?.role || 'user',\n          department: authUser.user_metadata?.department || 'General',\n          permissions: authUser.user_metadata?.permissions || ['view_department']\n        };\n        setUser(basicProfile);\n      } else {\n        setUser(data);\n      }\n    } catch (error) {\n      console.error('Error in fetchUserProfile:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    return { error };\n  };\n\n  const signUp = async (email: string, password: string, metadata: any) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata\n      }\n    });\n    return { error };\n  };\n\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setUser(null);\n    setSession(null);\n  };\n\n  const resetPassword = async (email: string) => {\n    const { error } = await supabase.auth.resetPasswordForEmail(email);\n    return { error };\n  };\n\n  const value = {\n    user,\n    session,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB3C,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAqB,IAAI,CAAC;EAC1D,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAiB,IAAI,CAAC;EAC5D,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAE,QAAQ,CAACkB,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEP;MAAQ;IAAE,CAAC,KAAK;MACzDC,UAAU,CAACD,OAAO,CAAC;MACnB,IAAIA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEF,IAAI,EAAE;QACjBU,gBAAgB,CAACR,OAAO,CAACF,IAAI,CAAC;MAChC,CAAC,MAAM;QACLK,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;;IAEF;IACA,MAAM;MAAEI,IAAI,EAAE;QAAEE;MAAa;IAAE,CAAC,GAAGvB,QAAQ,CAACkB,IAAI,CAACM,iBAAiB,CAAC,OAAOC,KAAK,EAAEX,OAAO,KAAK;MAC3FC,UAAU,CAACD,OAAO,CAAC;MACnB,IAAIA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEF,IAAI,EAAE;QACjB,MAAMU,gBAAgB,CAACR,OAAO,CAACF,IAAI,CAAC;MACtC,CAAC,MAAM;QACLC,OAAO,CAAC,IAAI,CAAC;QACbI,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;IAEF,OAAO,MAAMM,YAAY,CAACG,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMJ,gBAAgB,GAAG,MAAOK,QAAc,IAAK;IACjD,IAAI;MACF,MAAM;QAAEN,IAAI;QAAEO;MAAM,CAAC,GAAG,MAAM5B,QAAQ,CACnC6B,IAAI,CAAC,eAAe,CAAC,CACrBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEJ,QAAQ,CAACK,EAAE,CAAC,CACrBC,MAAM,CAAC,CAAC;MAEX,IAAIL,KAAK,EAAE;QAAA,IAAAM,qBAAA,EAAAC,eAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QACTC,OAAO,CAACX,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD;QACA,MAAMY,YAAyB,GAAG;UAChCR,EAAE,EAAEL,QAAQ,CAACK,EAAE;UACfS,IAAI,EAAE,EAAAP,qBAAA,GAAAP,QAAQ,CAACe,aAAa,cAAAR,qBAAA,uBAAtBA,qBAAA,CAAwBO,IAAI,OAAAN,eAAA,GAAIR,QAAQ,CAACgB,KAAK,cAAAR,eAAA,uBAAdA,eAAA,CAAgBS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,MAAM;UAC7ED,KAAK,EAAEhB,QAAQ,CAACgB,KAAK,IAAI,EAAE;UAC3BE,IAAI,EAAE,EAAAT,sBAAA,GAAAT,QAAQ,CAACe,aAAa,cAAAN,sBAAA,uBAAtBA,sBAAA,CAAwBS,IAAI,KAAI,MAAM;UAC5CC,UAAU,EAAE,EAAAT,sBAAA,GAAAV,QAAQ,CAACe,aAAa,cAAAL,sBAAA,uBAAtBA,sBAAA,CAAwBS,UAAU,KAAI,SAAS;UAC3DC,WAAW,EAAE,EAAAT,sBAAA,GAAAX,QAAQ,CAACe,aAAa,cAAAJ,sBAAA,uBAAtBA,sBAAA,CAAwBS,WAAW,KAAI,CAAC,iBAAiB;QACxE,CAAC;QACDlC,OAAO,CAAC2B,YAAY,CAAC;MACvB,CAAC,MAAM;QACL3B,OAAO,CAACQ,IAAI,CAAC;MACf;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+B,MAAM,GAAG,MAAAA,CAAOL,KAAa,EAAEM,QAAgB,KAAK;IACxD,MAAM;MAAErB;IAAM,CAAC,GAAG,MAAM5B,QAAQ,CAACkB,IAAI,CAACgC,kBAAkB,CAAC;MAAEP,KAAK;MAAEM;IAAS,CAAC,CAAC;IAC7E,OAAO;MAAErB;IAAM,CAAC;EAClB,CAAC;EAED,MAAMuB,MAAM,GAAG,MAAAA,CAAOR,KAAa,EAAEM,QAAgB,EAAEG,QAAa,KAAK;IACvE,MAAM;MAAExB;IAAM,CAAC,GAAG,MAAM5B,QAAQ,CAACkB,IAAI,CAACiC,MAAM,CAAC;MAC3CR,KAAK;MACLM,QAAQ;MACRI,OAAO,EAAE;QACPhC,IAAI,EAAE+B;MACR;IACF,CAAC,CAAC;IACF,OAAO;MAAExB;IAAM,CAAC;EAClB,CAAC;EAED,MAAM0B,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMtD,QAAQ,CAACkB,IAAI,CAACoC,OAAO,CAAC,CAAC;IAC7BzC,OAAO,CAAC,IAAI,CAAC;IACbE,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMwC,aAAa,GAAG,MAAOZ,KAAa,IAAK;IAC7C,MAAM;MAAEf;IAAM,CAAC,GAAG,MAAM5B,QAAQ,CAACkB,IAAI,CAACsC,qBAAqB,CAACb,KAAK,CAAC;IAClE,OAAO;MAAEf;IAAM,CAAC;EAClB,CAAC;EAED,MAAM6B,KAAK,GAAG;IACZ7C,IAAI;IACJE,OAAO;IACPE,OAAO;IACPgC,MAAM;IACNG,MAAM;IACNG,OAAO;IACPC;EACF,CAAC;EAED,oBACErD,OAAA,CAACC,WAAW,CAACuD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA/C,QAAA,EAChCA;EAAQ;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnD,GAAA,CAtGWF,YAAqD;AAAAsD,EAAA,GAArDtD,YAAqD;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}