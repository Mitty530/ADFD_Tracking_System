{"ast":null,"code":"// Admin utility to reset test user password\n// This is a temporary utility for development/testing purposes\n\nimport { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = 'https://dxrqbjuckrhkzrsdbenp.supabase.co';\nconst supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR4cnFianVja3Joa3pyc2RiZW5wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzA4NjA5MywiZXhwIjoyMDY4NjYyMDkzfQ.rnb7zGMceYudcupTTwJfoBqnxsDpmfJqEOYpgZKxSDo';\n\n// Create admin client with service role\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n});\nexport const resetTestUserPassword = async () => {\n  try {\n    console.log('üîß Admin: Resetting test user password...');\n\n    // Update user password using admin client\n    const {\n      data,\n      error\n    } = await supabaseAdmin.auth.admin.updateUserById('e33767f9-3a9f-4e3b-8e31-6965016f51e6', {\n      password: 'Test123!'\n    });\n    if (error) {\n      console.error('‚ùå Admin password reset failed:', error.message);\n      return {\n        success: false,\n        error: error.message\n      };\n    } else {\n      console.log('‚úÖ Admin password reset successful!');\n      return {\n        success: true,\n        data\n      };\n    }\n  } catch (err) {\n    console.error('üîß Admin reset failed:', err);\n    return {\n      success: false,\n      error: err.message\n    };\n  }\n};\nexport const testUserLogin = async () => {\n  try {\n    console.log('üß™ Testing user login with new password...');\n    const {\n      data,\n      error\n    } = await supabaseAdmin.auth.signInWithPassword({\n      email: 'Mamadouourydiallo819@gmail.com',\n      password: 'Test123!'\n    });\n    if (error) {\n      console.error('‚ùå Test login failed:', error.message);\n      return {\n        success: false,\n        error: error.message\n      };\n    } else {\n      var _data$user;\n      console.log('‚úÖ Test login successful!');\n      // Sign out immediately\n      await supabaseAdmin.auth.signOut();\n      return {\n        success: true,\n        user: (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.email\n      };\n    }\n  } catch (err) {\n    console.error('üß™ Test login error:', err);\n    return {\n      success: false,\n      error: err.message\n    };\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","supabaseServiceKey","supabaseAdmin","auth","autoRefreshToken","persistSession","resetTestUserPassword","console","log","data","error","admin","updateUserById","password","message","success","err","testUserLogin","signInWithPassword","email","_data$user","signOut","user"],"sources":["/Users/mamadouourydiallo/ADFI/src/utils/adminUtils.js"],"sourcesContent":["// Admin utility to reset test user password\n// This is a temporary utility for development/testing purposes\n\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = 'https://dxrqbjuckrhkzrsdbenp.supabase.co';\nconst supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR4cnFianVja3Joa3pyc2RiZW5wIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzA4NjA5MywiZXhwIjoyMDY4NjYyMDkzfQ.rnb7zGMceYudcupTTwJfoBqnxsDpmfJqEOYpgZKxSDo';\n\n// Create admin client with service role\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n});\n\nexport const resetTestUserPassword = async () => {\n  try {\n    console.log('üîß Admin: Resetting test user password...');\n    \n    // Update user password using admin client\n    const { data, error } = await supabaseAdmin.auth.admin.updateUserById(\n      'e33767f9-3a9f-4e3b-8e31-6965016f51e6',\n      { password: 'Test123!' }\n    );\n    \n    if (error) {\n      console.error('‚ùå Admin password reset failed:', error.message);\n      return { success: false, error: error.message };\n    } else {\n      console.log('‚úÖ Admin password reset successful!');\n      return { success: true, data };\n    }\n  } catch (err) {\n    console.error('üîß Admin reset failed:', err);\n    return { success: false, error: err.message };\n  }\n};\n\nexport const testUserLogin = async () => {\n  try {\n    console.log('üß™ Testing user login with new password...');\n    \n    const { data, error } = await supabaseAdmin.auth.signInWithPassword({\n      email: 'Mamadouourydiallo819@gmail.com',\n      password: 'Test123!'\n    });\n    \n    if (error) {\n      console.error('‚ùå Test login failed:', error.message);\n      return { success: false, error: error.message };\n    } else {\n      console.log('‚úÖ Test login successful!');\n      // Sign out immediately\n      await supabaseAdmin.auth.signOut();\n      return { success: true, user: data.user?.email };\n    }\n  } catch (err) {\n    console.error('üß™ Test login error:', err);\n    return { success: false, error: err.message };\n  }\n};\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,kBAAkB,GAAG,6NAA6N;;AAExP;AACA,MAAMC,aAAa,GAAGH,YAAY,CAACC,WAAW,EAAEC,kBAAkB,EAAE;EAClEE,IAAI,EAAE;IACJC,gBAAgB,EAAE,KAAK;IACvBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;;IAExD;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMR,aAAa,CAACC,IAAI,CAACQ,KAAK,CAACC,cAAc,CACnE,sCAAsC,EACtC;MAAEC,QAAQ,EAAE;IAAW,CACzB,CAAC;IAED,IAAIH,KAAK,EAAE;MACTH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACI,OAAO,CAAC;MAC9D,OAAO;QAAEC,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEA,KAAK,CAACI;MAAQ,CAAC;IACjD,CAAC,MAAM;MACLP,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjD,OAAO;QAAEO,OAAO,EAAE,IAAI;QAAEN;MAAK,CAAC;IAChC;EACF,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZT,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEM,GAAG,CAAC;IAC5C,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEL,KAAK,EAAEM,GAAG,CAACF;IAAQ,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACFV,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAEzD,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMR,aAAa,CAACC,IAAI,CAACe,kBAAkB,CAAC;MAClEC,KAAK,EAAE,gCAAgC;MACvCN,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,IAAIH,KAAK,EAAE;MACTH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACI,OAAO,CAAC;MACpD,OAAO;QAAEC,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEA,KAAK,CAACI;MAAQ,CAAC;IACjD,CAAC,MAAM;MAAA,IAAAM,UAAA;MACLb,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC;MACA,MAAMN,aAAa,CAACC,IAAI,CAACkB,OAAO,CAAC,CAAC;MAClC,OAAO;QAAEN,OAAO,EAAE,IAAI;QAAEO,IAAI,GAAAF,UAAA,GAAEX,IAAI,CAACa,IAAI,cAAAF,UAAA,uBAATA,UAAA,CAAWD;MAAM,CAAC;IAClD;EACF,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZT,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEM,GAAG,CAAC;IAC1C,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEL,KAAK,EAAEM,GAAG,CAACF;IAAQ,CAAC;EAC/C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}