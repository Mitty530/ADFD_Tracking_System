{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ousmane\\\\Documents\\\\TrackingSystem\\\\ADFD_Tracking_System\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { getAuthorizedUser } from '../config/authorizedUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchUserProfile = async authUser => {\n    try {\n      console.log('üîç Fetching user profile for:', authUser.email);\n\n      // Check authorization\n      const authorizedUser = getAuthorizedUser(authUser.email || '');\n      if (authorizedUser) {\n        console.log('‚úÖ User authorized:', authorizedUser.name, `(${authorizedUser.role})`);\n\n        // Create user profile\n        const userProfile = {\n          id: authUser.id,\n          name: authorizedUser.name,\n          email: authUser.email || '',\n          role: authorizedUser.role,\n          region: undefined,\n          regional_countries: undefined,\n          can_create_requests: authorizedUser.can_create_requests,\n          can_approve_reject: authorizedUser.can_approve_reject,\n          can_disburse: authorizedUser.can_disburse,\n          view_only_access: authorizedUser.view_only_access,\n          is_active: true,\n          avatar_url: undefined\n        };\n        setUser(userProfile);\n        setLoading(false);\n        console.log('‚úÖ Authentication complete');\n      } else {\n        console.error('‚ùå User not authorized:', authUser.email);\n        await supabase.auth.signOut();\n        setUser(null);\n        setSession(null);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('‚ùå Error in fetchUserProfile:', error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        console.log('üîê Initializing authentication...');\n\n        // Check for magic link tokens\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\n        const accessToken = hashParams.get('access_token');\n        const refreshToken = hashParams.get('refresh_token');\n        if (accessToken && refreshToken) {\n          var _data$session;\n          console.log('üîó Processing magic link...');\n          const {\n            data,\n            error\n          } = await supabase.auth.setSession({\n            access_token: accessToken,\n            refresh_token: refreshToken\n          });\n          if (error) {\n            console.error('‚ùå Magic link error:', error);\n            setLoading(false);\n            return;\n          }\n          if ((_data$session = data.session) !== null && _data$session !== void 0 && _data$session.user) {\n            console.log('‚úÖ Magic link successful');\n            await fetchUserProfile(data.session.user);\n            window.history.replaceState({}, document.title, window.location.pathname);\n            return;\n          }\n        }\n\n        // Check existing session\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        if (session !== null && session !== void 0 && session.user) {\n          console.log('‚úÖ Existing session found');\n          await fetchUserProfile(session.user);\n        } else {\n          console.log('‚ÑπÔ∏è No session found');\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('‚ùå Auth init error:', error);\n        setLoading(false);\n      }\n    };\n    initAuth();\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log('üîÑ Auth state change:', event);\n      setSession(session);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signInWithMagicLink = async email => {\n    try {\n      console.log('üìß Sending magic link to:', email);\n\n      // Check if user is authorized before sending magic link\n      const authorizedUser = getAuthorizedUser(email);\n      if (!authorizedUser) {\n        return {\n          error: 'This email is not authorized to access the ADFD system. Please contact your administrator.'\n        };\n      }\n      const redirectUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/dashboard' : `${window.location.origin}/dashboard`;\n      const {\n        error\n      } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          emailRedirectTo: redirectUrl,\n          shouldCreateUser: false\n        }\n      });\n      if (error) {\n        console.error('‚ùå Magic link error:', error);\n        return {\n          error: error.message\n        };\n      }\n      console.log('‚úÖ Magic link sent successfully');\n      return {};\n    } catch (error) {\n      console.error('‚ùå Magic link error:', error);\n      return {\n        error: 'Failed to send magic link. Please try again.'\n      };\n    }\n  };\n  const signOut = async () => {\n    try {\n      await supabase.auth.signOut();\n      setUser(null);\n      setSession(null);\n      console.log('‚úÖ Signed out successfully');\n    } catch (error) {\n      console.error('‚ùå Sign out error:', error);\n      setUser(null);\n      setSession(null);\n    }\n  };\n  const resetPassword = async email => {\n    try {\n      const {\n        error\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`\n      });\n      if (error) {\n        return {\n          error: error.message\n        };\n      }\n      return {};\n    } catch (error) {\n      return {\n        error: 'Failed to send reset email. Please try again.'\n      };\n    }\n  };\n  const value = {\n    user,\n    session,\n    loading,\n    signInWithMagicLink,\n    signOut,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"sIDOCMze9iVqwxkgWIhOu8vskSI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","getAuthorizedUser","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","session","setSession","loading","setLoading","fetchUserProfile","authUser","console","log","email","authorizedUser","name","role","userProfile","id","region","regional_countries","can_create_requests","can_approve_reject","can_disburse","view_only_access","is_active","avatar_url","error","auth","signOut","initAuth","hashParams","URLSearchParams","window","location","hash","substring","accessToken","get","refreshToken","_data$session","data","access_token","refresh_token","history","replaceState","document","title","pathname","getSession","subscription","onAuthStateChange","event","unsubscribe","signInWithMagicLink","redirectUrl","process","env","NODE_ENV","origin","signInWithOtp","options","emailRedirectTo","shouldCreateUser","message","resetPassword","resetPasswordForEmail","redirectTo","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ousmane/Documents/TrackingSystem/ADFD_Tracking_System/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Session, User } from '@supabase/supabase-js';\r\nimport { supabase } from '../lib/supabase';\r\nimport { User as UserProfile, UserRole } from '../types/withdrawalTypes';\r\nimport { getAuthorizedUser } from '../config/authorizedUsers';\r\n\r\ninterface AuthContextType {\r\n  user: UserProfile | null;\r\n  session: Session | null;\r\n  loading: boolean;\r\n  signInWithMagicLink: (email: string) => Promise<{ error?: string }>;\r\n  signOut: () => Promise<void>;\r\n  resetPassword: (email: string) => Promise<{ error?: string }>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<UserProfile | null>(null);\r\n  const [session, setSession] = useState<Session | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchUserProfile = async (authUser: User) => {\r\n    try {\r\n      console.log('üîç Fetching user profile for:', authUser.email);\r\n\r\n      // Check authorization\r\n      const authorizedUser = getAuthorizedUser(authUser.email || '');\r\n      \r\n      if (authorizedUser) {\r\n        console.log('‚úÖ User authorized:', authorizedUser.name, `(${authorizedUser.role})`);\r\n\r\n        // Create user profile\r\n        const userProfile: UserProfile = {\r\n          id: authUser.id,\r\n          name: authorizedUser.name,\r\n          email: authUser.email || '',\r\n          role: authorizedUser.role as UserRole,\r\n          region: undefined,\r\n          regional_countries: undefined,\r\n          can_create_requests: authorizedUser.can_create_requests,\r\n          can_approve_reject: authorizedUser.can_approve_reject,\r\n          can_disburse: authorizedUser.can_disburse,\r\n          view_only_access: authorizedUser.view_only_access,\r\n          is_active: true,\r\n          avatar_url: undefined\r\n        };\r\n\r\n        setUser(userProfile);\r\n        setLoading(false);\r\n        console.log('‚úÖ Authentication complete');\r\n      } else {\r\n        console.error('‚ùå User not authorized:', authUser.email);\r\n        await supabase.auth.signOut();\r\n        setUser(null);\r\n        setSession(null);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Error in fetchUserProfile:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        console.log('üîê Initializing authentication...');\r\n        \r\n        // Check for magic link tokens\r\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\r\n        const accessToken = hashParams.get('access_token');\r\n        const refreshToken = hashParams.get('refresh_token');\r\n\r\n        if (accessToken && refreshToken) {\r\n          console.log('üîó Processing magic link...');\r\n          \r\n          const { data, error } = await supabase.auth.setSession({\r\n            access_token: accessToken,\r\n            refresh_token: refreshToken\r\n          });\r\n\r\n          if (error) {\r\n            console.error('‚ùå Magic link error:', error);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n\r\n          if (data.session?.user) {\r\n            console.log('‚úÖ Magic link successful');\r\n            await fetchUserProfile(data.session.user);\r\n            window.history.replaceState({}, document.title, window.location.pathname);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // Check existing session\r\n        const { data: { session } } = await supabase.auth.getSession();\r\n        if (session?.user) {\r\n          console.log('‚úÖ Existing session found');\r\n          await fetchUserProfile(session.user);\r\n        } else {\r\n          console.log('‚ÑπÔ∏è No session found');\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('‚ùå Auth init error:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n\r\n    // Listen for auth changes\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\r\n      console.log('üîÑ Auth state change:', event);\r\n      setSession(session);\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const signInWithMagicLink = async (email: string): Promise<{ error?: string }> => {\r\n    try {\r\n      console.log('üìß Sending magic link to:', email);\r\n\r\n      // Check if user is authorized before sending magic link\r\n      const authorizedUser = getAuthorizedUser(email);\r\n      if (!authorizedUser) {\r\n        return { error: 'This email is not authorized to access the ADFD system. Please contact your administrator.' };\r\n      }\r\n\r\n      const redirectUrl = process.env.NODE_ENV === 'development'\r\n        ? 'http://localhost:3000/dashboard'\r\n        : `${window.location.origin}/dashboard`;\r\n\r\n      const { error } = await supabase.auth.signInWithOtp({\r\n        email,\r\n        options: {\r\n          emailRedirectTo: redirectUrl,\r\n          shouldCreateUser: false,\r\n        }\r\n      });\r\n\r\n      if (error) {\r\n        console.error('‚ùå Magic link error:', error);\r\n        return { error: error.message };\r\n      }\r\n\r\n      console.log('‚úÖ Magic link sent successfully');\r\n      return {};\r\n    } catch (error) {\r\n      console.error('‚ùå Magic link error:', error);\r\n      return { error: 'Failed to send magic link. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      await supabase.auth.signOut();\r\n      setUser(null);\r\n      setSession(null);\r\n      console.log('‚úÖ Signed out successfully');\r\n    } catch (error) {\r\n      console.error('‚ùå Sign out error:', error);\r\n      setUser(null);\r\n      setSession(null);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (email: string): Promise<{ error?: string }> => {\r\n    try {\r\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${window.location.origin}/reset-password`,\r\n      });\r\n\r\n      if (error) {\r\n        return { error: error.message };\r\n      }\r\n\r\n      return {};\r\n    } catch (error) {\r\n      return { error: 'Failed to send reset email. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    session,\r\n    loading,\r\n    signInWithMagicLink,\r\n    signOut,\r\n    resetPassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAExF,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,SAASC,iBAAiB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9D,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGX,UAAU,CAACO,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAqB,IAAI,CAAC;EAC1D,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAiB,IAAI,CAAC;EAC5D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMqB,gBAAgB,GAAG,MAAOC,QAAc,IAAK;IACjD,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAACG,KAAK,CAAC;;MAE5D;MACA,MAAMC,cAAc,GAAGvB,iBAAiB,CAACmB,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAC;MAE9D,IAAIC,cAAc,EAAE;QAClBH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,cAAc,CAACC,IAAI,EAAE,IAAID,cAAc,CAACE,IAAI,GAAG,CAAC;;QAElF;QACA,MAAMC,WAAwB,GAAG;UAC/BC,EAAE,EAAER,QAAQ,CAACQ,EAAE;UACfH,IAAI,EAAED,cAAc,CAACC,IAAI;UACzBF,KAAK,EAAEH,QAAQ,CAACG,KAAK,IAAI,EAAE;UAC3BG,IAAI,EAAEF,cAAc,CAACE,IAAgB;UACrCG,MAAM,EAAExB,SAAS;UACjByB,kBAAkB,EAAEzB,SAAS;UAC7B0B,mBAAmB,EAAEP,cAAc,CAACO,mBAAmB;UACvDC,kBAAkB,EAAER,cAAc,CAACQ,kBAAkB;UACrDC,YAAY,EAAET,cAAc,CAACS,YAAY;UACzCC,gBAAgB,EAAEV,cAAc,CAACU,gBAAgB;UACjDC,SAAS,EAAE,IAAI;UACfC,UAAU,EAAE/B;QACd,CAAC;QAEDS,OAAO,CAACa,WAAW,CAAC;QACpBT,UAAU,CAAC,KAAK,CAAC;QACjBG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC,MAAM;QACLD,OAAO,CAACgB,KAAK,CAAC,wBAAwB,EAAEjB,QAAQ,CAACG,KAAK,CAAC;QACvD,MAAMvB,QAAQ,CAACsC,IAAI,CAACC,OAAO,CAAC,CAAC;QAC7BzB,OAAO,CAAC,IAAI,CAAC;QACbE,UAAU,CAAC,IAAI,CAAC;QAChBE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,MAAMyC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACFnB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;;QAEhD;QACA,MAAMmB,UAAU,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;QACzE,MAAMC,WAAW,GAAGN,UAAU,CAACO,GAAG,CAAC,cAAc,CAAC;QAClD,MAAMC,YAAY,GAAGR,UAAU,CAACO,GAAG,CAAC,eAAe,CAAC;QAEpD,IAAID,WAAW,IAAIE,YAAY,EAAE;UAAA,IAAAC,aAAA;UAC/B7B,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAE1C,MAAM;YAAE6B,IAAI;YAAEd;UAAM,CAAC,GAAG,MAAMrC,QAAQ,CAACsC,IAAI,CAACtB,UAAU,CAAC;YACrDoC,YAAY,EAAEL,WAAW;YACzBM,aAAa,EAAEJ;UACjB,CAAC,CAAC;UAEF,IAAIZ,KAAK,EAAE;YACThB,OAAO,CAACgB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;YAC3CnB,UAAU,CAAC,KAAK,CAAC;YACjB;UACF;UAEA,KAAAgC,aAAA,GAAIC,IAAI,CAACpC,OAAO,cAAAmC,aAAA,eAAZA,aAAA,CAAcrC,IAAI,EAAE;YACtBQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;YACtC,MAAMH,gBAAgB,CAACgC,IAAI,CAACpC,OAAO,CAACF,IAAI,CAAC;YACzC8B,MAAM,CAACW,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEd,MAAM,CAACC,QAAQ,CAACc,QAAQ,CAAC;YACzE;UACF;QACF;;QAEA;QACA,MAAM;UAAEP,IAAI,EAAE;YAAEpC;UAAQ;QAAE,CAAC,GAAG,MAAMf,QAAQ,CAACsC,IAAI,CAACqB,UAAU,CAAC,CAAC;QAC9D,IAAI5C,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEF,IAAI,EAAE;UACjBQ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;UACvC,MAAMH,gBAAgB,CAACJ,OAAO,CAACF,IAAI,CAAC;QACtC,CAAC,MAAM;UACLQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClCJ,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdhB,OAAO,CAACgB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CnB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDsB,QAAQ,CAAC,CAAC;;IAEV;IACA,MAAM;MAAEW,IAAI,EAAE;QAAES;MAAa;IAAE,CAAC,GAAG5D,QAAQ,CAACsC,IAAI,CAACuB,iBAAiB,CAAC,OAAOC,KAAK,EAAE/C,OAAO,KAAK;MAC3FM,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEwC,KAAK,CAAC;MAC3C9C,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAM6C,YAAY,CAACG,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAG,MAAOzC,KAAa,IAAkC;IAChF,IAAI;MACFF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,KAAK,CAAC;;MAE/C;MACA,MAAMC,cAAc,GAAGvB,iBAAiB,CAACsB,KAAK,CAAC;MAC/C,IAAI,CAACC,cAAc,EAAE;QACnB,OAAO;UAAEa,KAAK,EAAE;QAA6F,CAAC;MAChH;MAEA,MAAM4B,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GACtD,iCAAiC,GACjC,GAAGzB,MAAM,CAACC,QAAQ,CAACyB,MAAM,YAAY;MAEzC,MAAM;QAAEhC;MAAM,CAAC,GAAG,MAAMrC,QAAQ,CAACsC,IAAI,CAACgC,aAAa,CAAC;QAClD/C,KAAK;QACLgD,OAAO,EAAE;UACPC,eAAe,EAAEP,WAAW;UAC5BQ,gBAAgB,EAAE;QACpB;MACF,CAAC,CAAC;MAEF,IAAIpC,KAAK,EAAE;QACThB,OAAO,CAACgB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,OAAO;UAAEA,KAAK,EAAEA,KAAK,CAACqC;QAAQ,CAAC;MACjC;MAEArD,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO;QAAEA,KAAK,EAAE;MAA+C,CAAC;IAClE;EACF,CAAC;EAED,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMvC,QAAQ,CAACsC,IAAI,CAACC,OAAO,CAAC,CAAC;MAC7BzB,OAAO,CAAC,IAAI,CAAC;MACbE,UAAU,CAAC,IAAI,CAAC;MAChBK,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCvB,OAAO,CAAC,IAAI,CAAC;MACbE,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,MAAM2D,aAAa,GAAG,MAAOpD,KAAa,IAAkC;IAC1E,IAAI;MACF,MAAM;QAAEc;MAAM,CAAC,GAAG,MAAMrC,QAAQ,CAACsC,IAAI,CAACsC,qBAAqB,CAACrD,KAAK,EAAE;QACjEsD,UAAU,EAAE,GAAGlC,MAAM,CAACC,QAAQ,CAACyB,MAAM;MACvC,CAAC,CAAC;MAEF,IAAIhC,KAAK,EAAE;QACT,OAAO;UAAEA,KAAK,EAAEA,KAAK,CAACqC;QAAQ,CAAC;MACjC;MAEA,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACd,OAAO;QAAEA,KAAK,EAAE;MAAgD,CAAC;IACnE;EACF,CAAC;EAED,MAAMyC,KAAK,GAAG;IACZjE,IAAI;IACJE,OAAO;IACPE,OAAO;IACP+C,mBAAmB;IACnBzB,OAAO;IACPoC;EACF,CAAC;EAED,oBACExE,OAAA,CAACC,WAAW,CAAC2E,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnE,QAAA,EAChCA;EAAQ;IAAAqE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvE,GAAA,CAvLWF,YAA+C;AAAA0E,EAAA,GAA/C1E,YAA+C;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}