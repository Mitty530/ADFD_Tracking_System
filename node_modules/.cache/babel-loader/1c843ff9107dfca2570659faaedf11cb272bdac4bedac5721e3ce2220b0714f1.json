{"ast":null,"code":"// User roles in the ADFD system\n\n// Action types for withdrawal requests\n\n// Request stages\n\n// Priority levels\n\n// Currency types\n\n// User interface\n\n// Withdrawal request interface\n\n// Form data for creating new requests\n\n// Filter options\n\n// Search and filter state\n\n// Action result interface\n\n// Permission validation interface\n\n// Dashboard statistics\n\n// Notification interface\n\n// Loading state interface\n\n// Modal state interface\n\n// Form validation result\n\n// API response interface (for future backend integration)\n\n// Event handler types\n\n// Component props interfaces\n\n// Role-based permissions mapping\nexport const ROLE_PERMISSIONS = {\n  archive_team: ['create_request', 'view'],\n  operations_team: ['approve', 'reject', 'view'],\n  core_banking_team: ['disburse', 'view'],\n  loan_admin: ['view']\n};\n\n// Stage transition rules\nexport const STAGE_TRANSITIONS = {\n  initial_review: ['technical_review'],\n  technical_review: ['core_banking', 'initial_review'],\n  // Can go back or forward\n  core_banking: ['disbursed'],\n  disbursed: [] // Final stage\n};\n\n// Countries supported by ADFD\nexport const ADFD_COUNTRIES = ['UAE', 'Egypt', 'Jordan', 'Morocco', 'Tunisia', 'Lebanon', 'Palestine', 'Yemen', 'Sudan', 'Algeria', 'Iraq', 'Syria', 'Libya', 'Mauritania'];\n\n// Default form values\nexport const DEFAULT_FORM_VALUES = {\n  projectNumber: '',\n  beneficiaryName: '',\n  country: 'UAE',\n  amount: 0,\n  currency: 'USD',\n  valueDate: '',\n  priority: 'medium'\n};","map":{"version":3,"names":["ROLE_PERMISSIONS","archive_team","operations_team","core_banking_team","loan_admin","STAGE_TRANSITIONS","initial_review","technical_review","core_banking","disbursed","ADFD_COUNTRIES","DEFAULT_FORM_VALUES","projectNumber","beneficiaryName","country","amount","currency","valueDate","priority"],"sources":["/Users/mamadouourydiallo/ADFI/src/types/withdrawalTypes.ts"],"sourcesContent":["// User roles in the ADFD system\nexport type UserRole = 'archive_team' | 'operations_team' | 'core_banking_team' | 'loan_admin';\n\n// Action types for withdrawal requests\nexport type ActionType = 'create_request' | 'approve' | 'reject' | 'disburse' | 'view';\n\n// Request stages\nexport type RequestStage = 'initial_review' | 'technical_review' | 'core_banking' | 'disbursed';\n\n// Priority levels\nexport type Priority = 'low' | 'medium' | 'high' | 'urgent';\n\n// Currency types\nexport type Currency = 'USD' | 'EUR' | 'AED';\n\n// User interface\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: UserRole;\n  avatar: string;\n  department?: string;\n  permissions: ActionType[];\n}\n\n// Withdrawal request interface\nexport interface WithdrawalRequest {\n  id: string;\n  projectNumber: string;\n  refNumber: string;\n  beneficiaryName: string;\n  country: string;\n  amount: number;\n  currency: Currency;\n  valueDate: string;\n  currentStage: RequestStage;\n  status: string;\n  priority: Priority;\n  assignedTo: string;\n  processingDays: number;\n  createdAt: Date;\n  updatedAt: Date;\n  notes?: string;\n  attachments?: string[];\n}\n\n// Form data for creating new requests\nexport interface CreateRequestFormData {\n  projectNumber: string;\n  beneficiaryName: string;\n  country: string;\n  amount: number;\n  currency: Currency;\n  valueDate: string;\n  priority: Priority;\n  notes?: string;\n}\n\n// Filter options\nexport interface FilterOptions {\n  status: string;\n  country: string;\n  priority: string;\n  stage: string;\n}\n\n// Search and filter state\nexport interface SearchFilterState {\n  searchTerm: string;\n  filters: FilterOptions;\n}\n\n// Action result interface\nexport interface ActionResult {\n  success: boolean;\n  message: string;\n  data?: any;\n}\n\n// Permission validation interface\nexport interface PermissionCheck {\n  canPerform: boolean;\n  reason?: string;\n}\n\n// Dashboard statistics\nexport interface DashboardStats {\n  totalRequests: number;\n  pendingRequests: number;\n  avgProcessingTime: number;\n  dueSoon: number;\n  byStage: {\n    initial_review: number;\n    technical_review: number;\n    core_banking: number;\n    disbursed: number;\n  };\n  byPriority: {\n    low: number;\n    medium: number;\n    high: number;\n    urgent: number;\n  };\n}\n\n// Notification interface\nexport interface Notification {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  timestamp: Date;\n  autoClose?: boolean;\n  duration?: number;\n}\n\n// Loading state interface\nexport interface LoadingState {\n  isLoading: boolean;\n  operation?: string;\n  progress?: number;\n}\n\n// Modal state interface\nexport interface ModalState {\n  isOpen: boolean;\n  type?: 'login' | 'details' | 'create' | 'confirm';\n  data?: any;\n}\n\n// Form validation result\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: Record<string, string>;\n}\n\n// API response interface (for future backend integration)\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  errors?: string[];\n  timestamp: Date;\n}\n\n// Event handler types\nexport type ButtonClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => void | Promise<void>;\nexport type FormSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => void | Promise<void>;\nexport type InputChangeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;\n\n// Component props interfaces\nexport interface ButtonProps {\n  variant?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning';\n  size?: 'sm' | 'md' | 'lg';\n  disabled?: boolean;\n  loading?: boolean;\n  onClick?: ButtonClickHandler;\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport interface ConfirmDialogProps {\n  isOpen: boolean;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void | Promise<void>;\n  onCancel: () => void;\n  variant?: 'danger' | 'warning' | 'info';\n}\n\n// Role-based permissions mapping\nexport const ROLE_PERMISSIONS: Record<UserRole, ActionType[]> = {\n  archive_team: ['create_request', 'view'],\n  operations_team: ['approve', 'reject', 'view'],\n  core_banking_team: ['disburse', 'view'],\n  loan_admin: ['view']\n};\n\n// Stage transition rules\nexport const STAGE_TRANSITIONS: Record<RequestStage, RequestStage[]> = {\n  initial_review: ['technical_review'],\n  technical_review: ['core_banking', 'initial_review'], // Can go back or forward\n  core_banking: ['disbursed'],\n  disbursed: [] // Final stage\n};\n\n// Countries supported by ADFD\nexport const ADFD_COUNTRIES = [\n  'UAE', 'Egypt', 'Jordan', 'Morocco', 'Tunisia', 'Lebanon', 'Palestine', \n  'Yemen', 'Sudan', 'Algeria', 'Iraq', 'Syria', 'Libya', 'Mauritania'\n];\n\n// Default form values\nexport const DEFAULT_FORM_VALUES: CreateRequestFormData = {\n  projectNumber: '',\n  beneficiaryName: '',\n  country: 'UAE',\n  amount: 0,\n  currency: 'USD',\n  valueDate: '',\n  priority: 'medium'\n};\n"],"mappings":"AAAA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAWA;;AAqBA;;AAYA;;AAQA;;AAMA;;AAOA;;AAMA;;AAoBA;;AAWA;;AAOA;;AAOA;;AAMA;;AASA;;AAKA;;AAuBA;AACA,OAAO,MAAMA,gBAAgD,GAAG;EAC9DC,YAAY,EAAE,CAAC,gBAAgB,EAAE,MAAM,CAAC;EACxCC,eAAe,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC;EAC9CC,iBAAiB,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC;EACvCC,UAAU,EAAE,CAAC,MAAM;AACrB,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAuD,GAAG;EACrEC,cAAc,EAAE,CAAC,kBAAkB,CAAC;EACpCC,gBAAgB,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;EAAE;EACtDC,YAAY,EAAE,CAAC,WAAW,CAAC;EAC3BC,SAAS,EAAE,EAAE,CAAC;AAChB,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,CAC5B,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EACtE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,CACpE;;AAED;AACA,OAAO,MAAMC,mBAA0C,GAAG;EACxDC,aAAa,EAAE,EAAE;EACjBC,eAAe,EAAE,EAAE;EACnBC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}